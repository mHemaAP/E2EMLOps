name: Project 01 - Kubernetes Deployment

# When to run this workflow
on:
  workflow_dispatch:  # Manual trigger from GitHub UI
  # Uncomment to enable automatic triggers
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

# Environment variables used across jobs
env:
  # ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  # S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
  # S3_DATA_PATH: data/                #data/files/md5 

jobs:
  #----------------------------------------
  # JOB 1: Build and push Docker image to ECR
  #----------------------------------------
  build-and-push-ecr-image:
    name: ðŸ“¦ Build and Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      commit_id: ${{ steps.get_commit_id.outputs.commit_id }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2
      #   with:
      #     mask-password: 'false'

      - name: Get Latest Commit ID
        id: get_commit_id
        run: |
          latest_commit=$(git rev-parse HEAD)
          echo "commit_id=$latest_commit" >> $GITHUB_OUTPUT
      
      - name: Display the commit ID        
        run: |
          echo "Latest commit ID is: ${{ steps.get_commit_id.outputs.commit_id }}"
      
      # - name: Build and Push Docker Image
      #   id: build-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     IMAGE_TAG: latest
      #   run: |
      #     # Build development container image and push to ECR
      #     echo "Building and pushing image to $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT



  #----------------------------------------
  # JOB 2: Launch EC2 instance with GPU for training
  #----------------------------------------
  launch-runner:
    name: ðŸš€ Launch EC2 GPU Runner
    runs-on: ubuntu-latest
    needs: build-and-push-ecr-image
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
      commit_id: ${{ steps.get_commit_id_runner.outputs.commit_id }}
      
    env:
      TF_LOG: DEBUG
      CML_VERBOSE: true 
      
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Display the commit ID
        run: |
          echo "Latest commit ID is: ${{ needs.build-and-push-ecr-image.outputs.commit_id }}"

      - name: Get latest commit ID
        id: get_commit_id_runner
        run: |
          echo "commit_id=${{ needs.build-and-push-ecr-image.outputs.commit_id }}" >> $GITHUB_OUTPUT
      
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@v2.3.9
        with:
          mode: start
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          # AMI with CUDA/GPU drivers
          ec2-image-id: ami-01654480b8a1994bd
          ec2-instance-type: g4dn.xlarge
          subnet-id: ${{ secrets.AWS_SUBNET_ID_1 }}
          security-group-id: ${{ secrets.AWS_SECURITY_GROUP_ID }}
          market-type: "spot"

  #----------------------------------------
  # JOB 3: Train model and deploy
  #----------------------------------------
  do-the-job:
    name: Train Models and Deploy
    needs: [launch-runner, build-and-push-ecr-image]
    runs-on: ${{ needs.launch-runner.outputs.label }}
    outputs:
      commit_id: ${{ steps.get_commit_id_ec2.outputs.commit_id }}
    timeout-minutes: 20
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install requirements
        run: |
          pip install -r requirements.cpu.txt
          pip install pyopenssl --upgrade

      - name: Setup dvc
        run: |
          dvc pull -r mlops

      - name: Setup dvc
        run: |
          dvc repro

      - name: Get Commit ID
        id: get_commit_id_ec2
        run: |
          echo "commit_id=${{ needs.launch-runner.outputs.commit_id }}" >> $GITHUB_OUTPUT

  #----------------------------------------
  # JOB 4: Stop EC2 runner after completion
  #----------------------------------------
  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - launch-runner
      - do-the-job
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2.3.9
        with:
          mode: stop
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.launch-runner.outputs.label }}
          ec2-instance-id: ${{ needs.launch-runner.outputs.ec2-instance-id }}
